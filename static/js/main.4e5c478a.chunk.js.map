{"version":3,"sources":["services/pixabayApi.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.js","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchImages","searchQuery","page","url","fetch","then","response","ok","json","statusText","LoaderWrapper","Spinner","type","color","height","width","timeout","Overlay","ModalContent","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","props","onClose","handleOverlayClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","onClick","children","Component","Header","Form","Button","Input","Searchbar","state","value","handleInputChange","setState","toLowerCase","handleSubmit","preventDefault","toast","onSubmit","trim","error","resetForm","onChange","autocomplete","autoFocus","placeholder","GalleryItem","GalleryItemImage","ImageGalleryItem","id","imageSrc","alt","src","Gallery","ImageGallery","images","onImageClick","map","webformatURL","largeImageURL","tags","LoadMoreBtn","Wrapper","Message","Notification","text","defaultProps","Status","App","status","activeImage","fetchImagesByQuery","hits","length","catch","handleFormSubmit","handleButtonClick","prevState","resetActiveImage","handleImageClick","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","position","containerClassName","containerStyle","toastOptions","style","borderRadius","background","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","hasOverlay","getElementById"],"mappings":"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","file":"static/js/main.4e5c478a.chunk.js","sourcesContent":["const API_KEY = \"21709633-754ac93ca1acb3d9a26f3f2d1\";\r\nconst BASE_URL = \"https://pixabay.com/api\";\r\n\r\nexport const fetchImages = (searchQuery, page) => {\r\n  const url = `${BASE_URL}/?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`;\r\n\r\n  return fetch(url).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return response.statusText;\r\n  });\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;","import Loader from \"react-loader-spinner\";\r\nimport { LoaderWrapper } from \"./Loader.styled\";\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <LoaderWrapper>\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#BA55D3\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </LoaderWrapper>\r\n  );\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  max-width: 800px;\r\n  min-height: 500px;\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\r\n`;","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Overlay, ModalContent } from \"./Modal.styled\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOverlayClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <Overlay onClick={this.handleOverlayClick}>\r\n        <ModalContent>{this.props.children}</ModalContent>\r\n      </Overlay>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n    onClose: PropTypes.func,\r\n}","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n    padding-top: 2px;\r\n    padding-bottom: 2px;\r\n  }\r\n`;","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Header, Form, Button, Input } from \"./Searchbar.styled\";\r\n\r\nexport class Searchbar extends Component {\r\n  static propTypes = {\r\n    toast: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    this.setState({ value: value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { value } = this.state;\r\n    const { toast, onSubmit } = this.props;\r\n\r\n    if (value.trim() === \"\") {\r\n      toast.error(\"Enter a keyword to search images\");\r\n    }\r\n\r\n    onSubmit(value);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <Header>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Button type=\"submit\" />\r\n          <Input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={this.handleInputChange}\r\n            autocomplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </Form>\r\n      </Header>\r\n    );\r\n  }\r\n}","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const GalleryItem = styled.li`\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n\r\nexport const GalleryItemImage = styled.img`\r\n  width: 100%;\r\n  height: 230px;\r\n  object-fit: cover;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { GalleryItem, GalleryItemImage } from \"../ImageGalleryItem/ImageGalleryItem.styled\";\r\n\r\n\r\nconst ImageGalleryItem = ({ id, imageSrc, alt, onClick }) => {\r\n  return (\r\n    <GalleryItem>\r\n      <GalleryItemImage id={id} src={imageSrc} alt={alt} onClick={onClick} />\r\n    </GalleryItem>\r\n  );\r\n};\r\n\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageSrc: PropTypes.string,\r\n  alt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Gallery = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 20px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 10px 30px 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../../components/ImageGalleryItem/ImageGalleryItem\";\r\nimport { Gallery } from \"./ImageGallery.styled\";\r\n// components/ImageGalleryItem/ImageGalleryItem\";\r\nexport const ImageGallery = ({ images, onImageClick }) => {\r\n  return (\r\n    <Gallery>\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          id={id}\r\n          imageSrc={webformatURL}\r\n          onClick={() => onImageClick({ id, largeImageURL, tags })}\r\n          alt={tags}\r\n        />\r\n      ))}\r\n    </Gallery>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const LoadMoreBtn = styled.button`\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;","import PropTypes from \"prop-types\";\r\nimport { LoadMoreBtn } from \"./Button.styled\";\r\n\r\nexport const Button = ({ onClick }) => {\r\n  return (\r\n    <LoadMoreBtn type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </LoadMoreBtn>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    };","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-block;\r\n  padding: 10px;\r\n  text-align: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border: 1px solid #ba55d3;\r\n`;\r\n\r\nexport const Message = styled.p`\r\n  font-size: 14px;\r\n  color: #ba55d3;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Wrapper, Message } from \"./Notification.styled\";\r\n\r\nexport const Notification = ({ text }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Message>{text}</Message>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nNotification.defaultProps = {\r\n  text: \"Something wrong! Request error!\",\r\n};\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};","import { Component } from \"react\";\r\nimport { fetchImages } from \"./services/pixabayApi\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { Spinner } from \"./components/Loader/Loader\";\r\nimport { Modal } from \"./components/Modal/Modal\";\r\nimport { Searchbar } from \"./components/Searchbar/Searchbar\";\r\nimport  {ImageGallery}  from \"./components/ImageGallery/ImageGallery\";\r\nimport { Button } from \"./components/Button/Button\";\r\nimport { Notification } from \"./components/Notification/Notification\";\r\n\r\nconst Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n    page: 1,\r\n    images: [],\r\n    status: Status.IDLE,\r\n    activeImage: null,\r\n    error: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { page, searchQuery } = this.state;\r\n\r\n    if (prevState.searchQuery !== searchQuery) {\r\n      this.setState({ images: [] });\r\n      this.fetchImagesByQuery(searchQuery, page);\r\n      this.setState({ status: Status.PENDING });\r\n    }\r\n\r\n    if (prevState.page !== page && page !== 1) {\r\n      this.fetchImagesByQuery(searchQuery, page);\r\n    }\r\n\r\n    if (page > 1) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchImagesByQuery = (searchQuery, page) => {\r\n    fetchImages(searchQuery, page)\r\n      .then(({ hits }) => {\r\n        if (hits.length === 0) {\r\n          this.setState({ status: Status.IDLE });\r\n          toast.error(\"Sorry, we couldn't find any matches\");\r\n        } else {\r\n          this.setState(({ images }) => ({\r\n            images: [...images, ...hits],\r\n            status: Status.RESOLVED,\r\n          }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error, status: Status.REJECTED });\r\n      });\r\n  };\r\n\r\n  handleFormSubmit = (value) => {\r\n    this.setState({ searchQuery: value, page: 1 });\r\n  };\r\n\r\n  handleButtonClick = () => {\r\n    this.setState((prevState) => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  resetActiveImage = () => {\r\n    this.setState({ activeImage: null });\r\n  };\r\n\r\n  handleImageClick = (activeImage) => {\r\n    this.setState({ activeImage });\r\n  };\r\n\r\n  render() {\r\n    const { images, status, activeImage, error } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleFormSubmit} toast={toast} />\r\n        {status === Status.IDLE && <></>}\r\n        {status === Status.PENDING && <Spinner />}\r\n        {status === Status.REJECTED && <Notification text={error} />}\r\n        {status === Status.RESOLVED && (\r\n          <>\r\n            <ImageGallery\r\n              images={images}\r\n              onImageClick={this.handleImageClick}\r\n            />\r\n            {}\r\n            <Button onClick={this.handleButtonClick} />\r\n            {activeImage && (\r\n              <Modal onClose={this.resetActiveImage}>\r\n                <img src={activeImage.largeImageURL} alt={activeImage.tags} />\r\n              </Modal>\r\n            )}\r\n          </>\r\n        )}\r\n        <Toaster\r\n          position=\"top-right\"\r\n          containerClassName=\"\"\r\n          containerStyle={{ top: 100 }}\r\n          toastOptions={{\r\n            style: {\r\n              borderRadius: \"4px\",\r\n              background: \"#BA55D3\",\r\n              color: \"#fff\",\r\n            },\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App hasOverlay/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}